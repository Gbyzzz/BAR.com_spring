services:

  bar_backend:
    build:
        context: ./bar_backend
        args:
          - KEYSTORE_PASSWORD=${PASSWORD}
    restart: always
    container_name: bar_backend
    networks:
      - app_network
    ports:
      - "8080:8080"
    working_dir: /app
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/bar_db
      - SPRING_DATASOURCE_PASSWORD=${PASSWORD}
      - GBYZZZ_URL_TO_VALIDATE=http://baruserenable:8081/validate
      - SPRING_DATA_REDIS_PASSWORD=${PASSWORD}
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_KAFKA_BOOTSTRAPSERVERS=kafka:29092
      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=${KAFKA_SECURITY}
      - GBYZZZ_APP_JWT=${JWT_KEY}
      - GBYZZZ_APP_JWT_EXPIRATION=${JWT_EXPIRATION}
      - APP_MINIO_ENDPOINT=http://minio:9000
      - APP_MINIO_USERNAME=${USER}
      - APP_MINIO_PASSWORD=${PASSWORD}
      - APP_MINIO_USERPICBUCKET=user-pic-bucket
      - APP_MINIO_COCKTAILIMAGE=cocktail-image
      - APP_MINIO_COCKTAILTHUMBNAIL=cocktail-thumbnail
      - SERVER_SSL_KEY_STORE_PASSWORD=${PASSWORD}

  bar_frontend:
    build:
      context: ./bar_frontend
      args:
        - ENV = ${ENV}
    container_name: bar_frontend
    restart: always
    environment:
      # Set environment variables using docker-compose.yml or environment files
      ENV: dev  # Pass "prod" during build to use environment.prod.ts
    volumes:
      - ./certbot/www/:/var/www/certbot/:ro
    networks:
      - app_network
    ports:
      - "443:443"
      - "80:80"


  bar_user_enable:
    build: ./bar_user_enable
    restart: always
    container_name: baruserenable
    networks:
      - app_network
    working_dir: /app
    environment:
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PASSWORD=${PASSWORD}
      - SPRING_KAFKA_BOOTSTRAPSERVERS=kafka:29092
      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=${KAFKA_SECURITY}

  bar_email:
    build: ./bar_email
    restart: always
    container_name: bar_email
    networks:
      - app_network
    ports:
      - "8082:8082"
    working_dir: /app
    environment:
      - GBYZZZ_RECOVER_URL=https://localhost:443/recover_password
      - SPRING_MAIL_HOST=${MAIL_HOST}
      - SPRING_MAIL_PORT=${MAIL_PORT}
      - SPRING_MAIL_USERNAME=${MAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${MAIL_PASSWORD}
      - SPRING_KAFKA_BOOTSTRAPSERVERS=kafka:29092
      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=${KAFKA_SECURITY}

  bar_search:
    build:
      context: ./bar_search
      args:
      - KEYSTORE_PASSWORD=${PASSWORD}
    restart: always
    container_name: bar_search
    networks:
      - app_network
    ports:
      - "8083:8083"
    working_dir: /app
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/bar_db?stringtype=unspecified
      - SPRING_DATASOURCE_PASSWORD=${PASSWORD}
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PASSWORD=${PASSWORD}
      - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
      - SPRING_ELASTICSEARCH_USERNAME=${USER}
      - SPRING_ELASTICSEARCH_PASSWORD=${PASSWORD}
      - SPRING_KAFKA_BOOTSTRAPSERVERS=kafka:29092
      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=${KAFKA_SECURITY}
      - SERVER_SSL_KEY_STORE_PASSWORD=${PASSWORD}

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/
      - ./certbot/conf/:/etc/letsencrypt/

networks:
  app_network:
    external: true
